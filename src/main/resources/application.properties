fixedRate.in.milliseconds=1000
statisticsservice.infostring=LINES
statistics.service=console2000
spring.output.ansi.enabled=ALWAYS
server.servlet.encoding.charset=UTF-8
spring.messages.encoding=UTF-8

spring.datasource.url=jdbc:postgresql://${DB_HOST}:${DB_PORT}/${POSTGRES_DB}
spring.datasource.username=postgres
spring.datasource.password=postgres

spring.flyway.locations=classpath:sql
spring.flyway.baseline-on-migrate=true
spring.flyway.enabled=true
spring.flyway.driver=org.postgresql.Driver
spring.flyway.url=jdbc:postgresql://${DB_HOST}:${DB_PORT}/${POSTGRES_DB}
spring.flyway.user=postgres
spring.flyway.password=postgres

spring.datasource.driver-class-name=org.postgresql.Driver

spring.jpa.hibernate.ddl-auto=validate
spring.jpa.show-sql=false
logging.level.org.hibernate.SQL=OFF
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=OFF
logging.level.com.zaxxer.hikari=WARN
logging.level.org.hibernate.engine.jdbc.spi.SqlExceptionHelper=ERROR
logging.level.org.springframework.transaction=WARN

spring.kafka.bootstrap-servers=hl22.zil:9094
spring.kafka.consumer.group-id=var13
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.concurrency=2
spring.kafka.template.default-topic=var13
spring.kafka.consumer.enable-auto-commit=true
spring.kafka.consumer.auto-commit-interval=5s
spring.kafka.security.protocol=PLAINTEXT
spring.kafka.consumer.reconnect.backoff.ms=1000
spring.kafka.consumer.reconnect.backoff.max.ms=5000
spring.kafka.consumer.retry.backoff.ms=1000
kafka.hosts=${KAFKA_HOSTS:hl22.zil:9094,hl23.zil:9094}
kafka.groupId=${KAFKA_GROUP_ID:kam}
kafka.topic=${KAFKA_TOPIC:var13}
kafka.concurrency=${KAFKA_CONCURRENCY:2}

spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer





